type Libro {
    id: ID!
    titulo: String
    autor: Autor
    categoria: Categoria
    disponible: Boolean
}

type Autor {
    id: ID!
    nombre: String
    biografia: String
}

type Categoria {
    id: ID!
    nombre: String
    descripcion: String
}

type Reserva {
    id: ID!
    libroId: ID
    usuarioId: ID
}

type Usuario {
    id: ID!
    nombre: String
    email: String
    esAdmin: Boolean
}

type Query {
    buscarLibrosTitulo(titulo: String): [Libro]
    buscarLibrosID(id: ID!): [Libro]
    obtenerAutor(id: ID!): Autor
    obtenerTodosAutores: [Autor]
    obtenerCategoria(id: ID!): Categoria
    obtenerTodasCategorias: [Categoria]
    obtenerReservas(usuarioId: ID!): [Reserva]
    obtenerTodasReservas: [Reserva]
}

type Mutation {
    agregarLibro(titulo: String!, autorId: ID!, categoriaId: ID!): Libro
    editarLibro(id: ID!, titulo: String, autorId: ID, categoriaId: ID, disponible: Boolean): Libro
    eliminarLibro(id: ID!): Boolean
    agregarAutor(nombre: String!): Autor
    editarAutor(id: ID!, nombre: String, biografia: String): Autor
    eliminarAutor(id: ID!): Boolean
    agregarCategoria(nombre: String!): Categoria
    editarCategoria(id: ID!, nombre: String): Categoria
    eliminarCategoria(id: ID!): Boolean
    hacerReserva(libroId: ID!, usuarioId: ID!): Reserva
    cancelarReserva(id: ID!): Boolean
}
